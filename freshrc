# vim: set ft=sh:

fresh freshshell/fresh bin/fresh --bin
fresh freshshell/fresh contrib/completion/fresh-completion.zsh --file=completion/_fresh
fresh freshshell/fresh-open bin/fresh-open --bin

# Config
fresh-options --file
  fresh config/\*

  if [[ "$(uname)" == "Darwin" ]]; then
    fresh osx/config/\*
  fi

fresh-options

# Zsh
fresh-options --file=~/.zshrc --marker
  fresh shell/zsh/completion.zsh
  fresh shell/zsh/prompt.zsh
  fresh shell/zsh/title.zsh
  fresh shell/zsh/functions.zsh
  fresh shell/zsh/zshrc.zsh
  fresh shell/zsh/keybindings.zsh

  # this loads the shell files and needs to be at the bottom of the zshrc for
  # compdef be availiable
  fresh freshshell/fresh contrib/source-build.sh

  # fresh robbyrussell/oh-my-zsh lib/edit-command-line.zsh
  fresh bjeanes/dot-files shells/zsh/lib/completion-waiting-dots.zsh

  fresh robbyrussell/oh-my-zsh plugins/golang/golang.plugin.zsh
  fresh robbyrussell/oh-my-zsh plugins/django/django.plugin.zsh

  fresh robbyrussell/oh-my-zsh plugins/httpie/httpie.plugin.zsh

  fresh robbyrussell/oh-my-zsh plugins/sudo/sudo.plugin.zsh

  # de-duplicate PATH
  fresh akatov/dotfiles zshrc/dedup-path
fresh-options

fresh zsh-users/zsh-completions src/_ack --file=completion/_ack
fresh robbyrussell/oh-my-zsh plugins/pip/_pip --file=completion/_pip
# fresh Valodim/zsh-curl-completion _curl --file=completion/_curl

# Shell
fresh shell/functions/\*
fresh shell/exports.sh
fresh shell/lib/\*
fresh shell/aliases.sh
fresh shell/local.sh

if [[ "$(uname)" == "Darwin" ]]; then
  # OSX Specific shell functionality
  fresh osx/functions/\*
  fresh osx/exports.sh
  fresh osx/aliases.sh

  # Get the coreutils prefix from brew. By redirecting the stderr of the
  # command to /dev/null, we avoid the error output to terminal if brew itself
  # is not installed or in case of some other error.
  # If brew is installed but coreutils is not installed, it will return
  # a path, but its a non-existant path and hence will be taken care of by the
  # subsequent if condition.
  coreutils_prefix="$(brew --prefix coreutils 2>/dev/null)"

  if [ -d "$coreutils_prefix/libexec/gnubin" ]; then
    # https://stackoverflow.com/questions/16790793/how-to-replace-strings-containing-slashes-with-sed
    fresh osx/gnu_coreutils.tmpl.sh --filter="sed 's|__GNU_COREUTILS_PREFIX__|$coreutils_prefix|g'"
  else
    echo 'WARNING: One or both of brew and coreutils are not installed. Hence will skip config for using coreutils. Re-run fresh once coreutils are installed to enable it.'
  fi


fi

# ZSH Syntax Highlighting. Note that this needs to be as much at the end as possible.
fresh zsh-users/zsh-syntax-highlighting zsh-syntax-highlighting.zsh --file=vendor/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
fresh zsh-users/zsh-syntax-highlighting .version --file=vendor/zsh-syntax-highlighting/.version  # Required since the plugin needs it internally
fresh zsh-users/zsh-syntax-highlighting .revision-hash --file=vendor/zsh-syntax-highlighting/.revision-hash  # Required since the plugin needs it internally

# Plugins for syntax highlighting
fresh zsh-users/zsh-syntax-highlighting highlighters/main/main-highlighter.zsh --file=vendor/zsh-syntax-highlighting/highlighters/main/main-highlighter.zsh
fresh zsh-users/zsh-syntax-highlighting highlighters/brackets/brackets-highlighter.zsh --file=vendor/zsh-syntax-highlighting/highlighters/brackets/brackets-highlighter.zsh
fresh shell/zsh/zsh-syntax-highlighting.zsh --file=~/.zshrc

# Backup
fresh deepakprakash/backup bin/backup.sh --bin=~/bin/backup
install_backup_trigger () {
  echo "Install the backup trigger.."
  ( cd $FRESH_PATH/source/deepakprakash/backup/osx && ./install.sh )
}


# Utils
fresh sivel/speedtest-cli speedtest.py --bin=~/bin/speedtest

fresh-options --bin
  fresh bin/\*
fresh-options

# fresh_after_build() {

#   # init_vim

#   # if [[ "$(uname)" == "Darwin" ]]; then
#   #   install_backup_trigger
#   # fi
# }
